#!/bin/sh
# Define annominous function so there won't be left over variables
# after the script is sourced.

# Made with the help of GPT 4o and GPT 4o Mini (edited by Chen)
{
  # Define color ansi escape codes
  GREEN="\033[32m"
  YELLOW="\033[93m"
  MAGENTA="\033[95m"
  RED="\033[31m"
  LIGHT_BLUE="\033[94m"
  CYAN="\033[96m"
  BOLD="\033[1m"
  UNDERLINE="\033[4m"
  ERROR="${RED}${BOLD}"
  RESET="\033[0m"

  # Exit if no arguments are passed
  if [ $# -eq 0 ]; then
    printf "${ERROR} No arguments provided. (exit code 1)${RESET}\n"
    return 1
  fi

  # Loop through each argument
  RET_ERROR=false
  for ARG in "$@"; do
    # Store the output of the 'type' command for the current argument
    TYPE_OUTPUT=$(builtin type "$ARG")

    # Check if the command was found
    if [ $? -ne 0 ]; then
      # printf "${ERROR}%s: %s${RESET}\n" "$ARG" "${UNDERLINE}Command not found (exit code 1)"
      # The top line was generated by ChatGPT but was too long and hard to work with
      printf "${ERROR} ${ARG}: ${UNDERLINE}Command not found${RESET}\n"
      RET_ERROR=true
      continue
    fi

    # Extract the command name and the rest of the output
    COMMAND_NAME="$ARG"
    REMAINING_OUTPUT="${TYPE_OUTPUT#"$COMMAND_NAME "}"
    COMMAND_NAME="${GREEN}${ARG}${RESET}"

    # Print the command name in green and the rest in default color using printf
    # printf "${GREEN}%s${RESET} %s\n" "$COMMAND_NAME" "$REMAINING_OUTPUT"
    case "$REMAINING_OUTPUT" in
      "is a shell builtin")
        printf "${COMMAND_NAME} is a ${LIGHT_BLUE}${BOLD}${UNDERLINE}shell builtin"
        ;;
      "is an alias for "*)
        printf "${COMMAND_NAME} is an ${YELLOW}${BOLD}${UNDERLINE}alias for ${REMAINING_OUTPUT#is an alias for }"
        ;;
      "is a shell function")
        printf "${COMMAND_NAME} is a ${GREEN}${BOLD}${UNDERLINE}shell function"
        ;;
      "is a shell keyword")
        printf "${COMMAND_NAME} is a ${MAGENTA}${BOLD}${UNDERLINE}shell keyword"
        ;;
      "is a reserved word")
        printf "${COMMAND_NAME} is a ${MAGENTA}${BOLD}${UNDERLINE}reserved word"
        ;;
      "is a shell function from "*)
        printf "${COMMAND_NAME} is a ${GREEN}${BOLD}shell function from ${UNDERLINE}${REMAINING_OUTPUT#is a shell function from }"
        ;;
      "is /"*)
        printf "${COMMAND_NAME} is ${CYAN}${UNDERLINE}${BOLD}${REMAINING_OUTPUT#is }"
        ;;
      *)
      printf "${COMMAND_NAME} ${UNDERLINE}${REMAINING_OUTPUT}"
      ;;
    esac
    printf "${RESET}\n"
  done

  # Return 1 if the command wasn't found
  if [ "$RET_ERROR" = true ]; then
    return 1
  fi
}
