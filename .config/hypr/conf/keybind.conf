# ------------------------------------------------------ #
# Key bindings                                           #
# ------------------------------------------------------ #

$mainMod = SUPER # Sets super key as main modifier

# Applications
bind = $mainMod, Return, exec, $terminal
bind = $mainMod, N, exec, $calc
bind = $mainMod, E, exec, $fileManager
bind = $mainMod CTRL, E, exec, $emojiPicker
bind = $mainMod CTRL, Q, exec, wlogout
bind = $mainMod, I, exec, $browser
bind = $mainMod, B, exec, $bluetooth

# Wofi
bind = $mainMod, R, exec, $menu
bind = $mainMod SHIFT, R, exec, $menuRun

# Lamp
bind = $mainMod ALT, L, exec, ~/.local/bin/lamp

# Windows
bind = $mainMod, C, killactive,
bind = $mainMod, F, fullscreen,
bind = $mainMod SHIFT, C, centerwindow,
bind = $mainMod, Q, exit,
bind = $mainMod, V, togglefloating,

# Move focus with mainMod + Vim keys
bind = $mainMod, H, movefocus, l
bind = $mainMod, J, movefocus, d
bind = $mainMod, K, movefocus, u
bind = $mainMod, L, movefocus, r

# Move windows with mainMod + shift + Vim keys
bind = $mainMod SHIFT, H, movewindow, l
bind = $mainMod SHIFT, J, movewindow, d
bind = $mainMod SHIFT, K, movewindow, u
bind = $mainMod SHIFT, L, movewindow, r

# Resize windows with mainMod + left control + Vim keys
bind = $mainMod&Control_L, H, resizeactive, -10 0
bind = $mainMod&Control_L, J, resizeactive, 0 10
bind = $mainMod&Control_L, K, resizeactive, 0 -10
bind = $mainMod&Control_L, L, resizeactive, 10 0

# Switch workspaces with mainMod + [0-9]
bind = $mainMod, 1, focusworkspaceoncurrentmonitor, 1
bind = $mainMod, 2, focusworkspaceoncurrentmonitor, 2
bind = $mainMod, 3, focusworkspaceoncurrentmonitor, 3
bind = $mainMod, 4, focusworkspaceoncurrentmonitor, 4
bind = $mainMod, 5, focusworkspaceoncurrentmonitor, 5
bind = $mainMod, 6, focusworkspaceoncurrentmonitor, 6
bind = $mainMod, 7, focusworkspaceoncurrentmonitor, 7
bind = $mainMod, 8, focusworkspaceoncurrentmonitor, 8
bind = $mainMod, 9, focusworkspaceoncurrentmonitor, 9
bind = $mainMod, 0, focusworkspaceoncurrentmonitor, 10

# Move active window to a workspace with mainMod + SHIFT + [0-9]
bind = $mainMod SHIFT, 1, movetoworkspace, 1
bind = $mainMod SHIFT, 2, movetoworkspace, 2
bind = $mainMod SHIFT, 3, movetoworkspace, 3
bind = $mainMod SHIFT, 4, movetoworkspace, 4
bind = $mainMod SHIFT, 5, movetoworkspace, 5
bind = $mainMod SHIFT, 6, movetoworkspace, 6
bind = $mainMod SHIFT, 7, movetoworkspace, 7
bind = $mainMod SHIFT, 8, movetoworkspace, 8
bind = $mainMod SHIFT, 9, movetoworkspace, 9
bind = $mainMod SHIFT, 0, movetoworkspace, 10

# Example special workspace (scratchpad)
bind = $mainMod, S, togglespecialworkspace, magic
bind = $mainMod SHIFT, S, movetoworkspace, special:magic

# Scroll through existing workspaces with mainMod + scroll
bind = $mainMod, mouse_down, workspace, e+1
bind = $mainMod, mouse_up, workspace, e-1

# Move/resize windows with mainMod + LMB/RMB and dragging
bindm = $mainMod, mouse:272, movewindow
bindm = $mainMod, mouse:273, resizewindow

# Laptop multimedia keys for volume and LCD brightness
bindel = ,XF86AudioRaiseVolume, exec, wpctl set-volume @DEFAULT_AUDIO_SINK@ 5%+
bindel = $mainMod, period, exec, wpctl set-volume @DEFAULT_AUDIO_SINK@ 5%+
bindel = ,XF86AudioLowerVolume, exec, wpctl set-volume @DEFAULT_AUDIO_SINK@ 5%-
bindel = $mainMod, comma, exec, wpctl set-volume @DEFAULT_AUDIO_SINK@ 5%-
bindel = ,XF86AudioMute, exec, wpctl set-mute @DEFAULT_AUDIO_SINK@ toggle
bindel = $mainMod, slash, exec, wpctl set-mute @DEFAULT_AUDIO_SINK@ toggle
bindel = ,XF86AudioMicMute, exec, wpctl set-mute @DEFAULT_AUDIO_SOURCE@ toggle
bindel = ,XF86MonBrightnessUp, exec, brightnessctl s 10%+
bindel = ,XF86MonBrightnessDown, exec, brightnessctl s 10%-

# Screenshot
bind = $mainMod, P, submap, screenshot # Switch to screenshot submap
submap = screenshot # Start screenshot submap

binde = , S, exec, grim -c -g "$(slurp)" # Open Slurp and Grim
binde = , S, submap, reset # Exit submap

binde = , M, exec, grep -B 20 "focused: yes" <(hyprctl monitors) | grep -m 1 "Monitor" | awk '/Monitor/{print $2}' | xargs grim -o
binde = , M, submap, reset # Exit submap

binde = , C, exec, grim -w "$(hyprctl activewindow -j | jq -r '.address')"
binde = , C, submap, reset # Exit submap

bind = , escape, submap, reset # Press escape to exit submap

submap = reset # Reset the submap, which will return to the global submap

# Restart Waybar 
bind = $mainMod, W, exec, killall waybar; waybar

# Hyprpicker
bind = $mainMod SHIFT, C, exec, hyprpicker -a

# Gamemode
bind = $mainMod, G, exec, ~/.config/hypr/gamemode.sh
